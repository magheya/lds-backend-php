{
  "info": {
    "name": "LDS Backend PHP API",
    "description": "API for the Site Association project",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Connection Test",
      "item": [
        {
          "name": "Test API Connection",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/test",
              "host": ["{{base_url}}"],
              "path": ["test"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "2. Authentication",
      "item": [
        {
          "name": "Admin Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login successful\", function() {",
                  "  pm.response.to.have.status(200);",
                  "  var jsonData = pm.response.json();",
                  "  pm.expect(jsonData.token).to.exist;",
                  "  pm.environment.set(\"admin_token\", jsonData.token);",
                  "  console.log(\"Token saved: \" + jsonData.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/login",
              "host": ["{{base_url}}"],
              "path": ["admin", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Check Authentication",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/check-auth",
              "host": ["{{base_url}}"],
              "path": ["admin", "check-auth"]
            }
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/logout",
              "host": ["{{base_url}}"],
              "path": ["admin", "logout"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "3. Products",
      "item": [
        {
          "name": "Get All Products (Public)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/products",
              "host": ["{{base_url}}"],
              "path": ["products"]
            }
          },
          "response": []
        },
        {
          "name": "Get Products by Category (Public)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/products/category/clothing",
              "host": ["{{base_url}}"],
              "path": ["products", "category", "clothing"]
            }
          },
          "response": []
        },
        {
          "name": "Add New Product (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Product added successfully\", function() {",
                  "  pm.response.to.have.status(201);",
                  "  var jsonData = pm.response.json();",
                  "  pm.expect(jsonData.id).to.exist;",
                  "  pm.environment.set(\"product_id\", jsonData.id);",
                  "  console.log(\"Product ID saved: \" + jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "Test Product",
                  "type": "text"
                },
                {
                  "key": "price",
                  "value": "19.99",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Product description",
                  "type": "text"
                },
                {
                  "key": "category",
                  "value": "clothing",
                  "type": "text"
                },
                {
                  "key": "stock",
                  "value": "10",
                  "type": "text"
                },
                {
                  "key": "image",
                  "type": "file",
                  "src": "/"
                },
                {
                  "key": "sizes",
                  "value": "[\"S\", \"M\", \"L\"]",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/products",
              "host": ["{{base_url}}"],
              "path": ["products"]
            }
          },
          "response": []
        },
        {
          "name": "Update Product (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Product\",\n    \"price\": 24.99,\n    \"description\": \"Updated description\",\n    \"category\": \"clothing\",\n    \"stock\": 15\n}"
            },
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Product (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "4. Events",
      "item": [
        {
          "name": "Get All Events (Public)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/events",
              "host": ["{{base_url}}"],
              "path": ["events"]
            }
          },
          "response": []
        },
        {
          "name": "Get Events by Type (Public)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/events/type/seminar",
              "host": ["{{base_url}}"],
              "path": ["events", "type", "seminar"]
            }
          },
          "response": []
        },
        {
          "name": "Add New Event (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Event added successfully\", function() {",
                  "  pm.response.to.have.status(201);",
                  "  var jsonData = pm.response.json();",
                  "  pm.expect(jsonData.id).to.exist;",
                  "  pm.environment.set(\"event_id\", jsonData.id);",
                  "  console.log(\"Event ID saved: \" + jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "Test Event",
                  "type": "text"
                },
                {
                  "key": "date",
                  "value": "2025-06-15",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Event description",
                  "type": "text"
                },
                {
                  "key": "type",
                  "value": "seminar",
                  "type": "text"
                },
                {
                  "key": "image",
                  "type": "file",
                  "src": "/"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/events",
              "host": ["{{base_url}}"],
              "path": ["events"]
            }
          },
          "response": []
        },
        {
          "name": "Update Event (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Event\",\n    \"date\": \"2025-07-15\",\n    \"description\": \"Updated event description\",\n    \"type\": \"workshop\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/events/{{event_id}}",
              "host": ["{{base_url}}"],
              "path": ["events", "{{event_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Event (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/events/{{event_id}}",
              "host": ["{{base_url}}"],
              "path": ["events", "{{event_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "5. Registrations",
      "item": [
        {
          "name": "Get All Registrations (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/registrations",
              "host": ["{{base_url}}"],
              "path": ["registrations"]
            }
          },
          "response": []
        },
        {
          "name": "Get Registrations by Event (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/registrations/event/{{event_id}}",
              "host": ["{{base_url}}"],
              "path": ["registrations", "event", "{{event_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Add New Registration (Public)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Registration added successfully\", function() {",
                  "  pm.response.to.have.status(201);",
                  "  var jsonData = pm.response.json();",
                  "  pm.expect(jsonData.id).to.exist;",
                  "  pm.environment.set(\"registration_id\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"event_id\": {{event_id}},\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"phone\": \"123-456-7890\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/registrations",
              "host": ["{{base_url}}"],
              "path": ["registrations"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Registration (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/registrations/{{registration_id}}",
              "host": ["{{base_url}}"],
              "path": ["registrations", "{{registration_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "6. Donations",
      "item": [
        {
          "name": "Get All Donations (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/donations",
              "host": ["{{base_url}}"],
              "path": ["donations"]
            }
          },
          "response": []
        },
        {
          "name": "Get Donations by Type (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/donations/type/monetary",
              "host": ["{{base_url}}"],
              "path": ["donations", "type", "monetary"]
            }
          },
          "response": []
        },
        {
          "name": "Add New Donation (Public)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Donation added successfully\", function() {",
                  "  pm.response.to.have.status(201);",
                  "  var jsonData = pm.response.json();",
                  "  pm.expect(jsonData.id).to.exist;",
                  "  pm.environment.set(\"donation_id\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"type\": \"monetary\",\n    \"amount\": 50.00,\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane@example.com\",\n    \"description\": \"Monthly contribution\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/donations",
              "host": ["{{base_url}}"],
              "path": ["donations"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "7. Messages",
      "item": [
        {
          "name": "Get All Messages (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/messages",
              "host": ["{{base_url}}"],
              "path": ["messages"]
            }
          },
          "response": []
        },
        {
          "name": "Get Unread Messages (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/messages/unread",
              "host": ["{{base_url}}"],
              "path": ["messages", "unread"]
            }
          },
          "response": []
        },
        {
          "name": "Get Message by ID (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/messages/{{message_id}}",
              "host": ["{{base_url}}"],
              "path": ["messages", "{{message_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Submit New Message (Public)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Message submitted successfully\", function() {",
                  "  pm.response.to.have.status(201);",
                  "  var jsonData = pm.response.json();",
                  "  pm.expect(jsonData.id).to.exist;",
                  "  pm.environment.set(\"message_id\", jsonData.id);",
                  "  console.log(\"Message ID saved: \" + jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Robert Brown\",\n    \"email\": \"robert@example.com\",\n    \"subject\": \"Question about events\",\n    \"message\": \"I would like more information about upcoming events.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/messages",
              "host": ["{{base_url}}"],
              "path": ["messages"]
            }
          },
          "response": []
        },
        {
          "name": "Mark Message as Read (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/messages/{{message_id}}/read",
              "host": ["{{base_url}}"],
              "path": ["messages", "{{message_id}}", "read"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Message (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/messages/{{message_id}}",
              "host": ["{{base_url}}"],
              "path": ["messages", "{{message_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "8. Orders",
      "item": [
        {
          "name": "Get All Orders (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/orders",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            }
          },
          "response": []
        },
        {
          "name": "Get Order by ID (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Submit New Order (Public)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Order submitted successfully\", function() {",
                  "  pm.response.to.have.status(201);",
                  "  var jsonData = pm.response.json();",
                  "  pm.expect(jsonData.id).to.exist;",
                  "  pm.environment.set(\"order_id\", jsonData.id);",
                  "  console.log(\"Order ID saved: \" + jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customer_name\": \"Michael Davis\",\n    \"customer_email\": \"michael@example.com\",\n    \"total\": 39.98,\n    \"items\": [\n        {\n            \"product_id\": {{product_id}},\n            \"size\": \"M\",\n            \"quantity\": 2,\n            \"price\": 19.99\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            }
          },
          "response": []
        },
        {
          "name": "Update Order Status (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}", "status"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Order (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "9. Activities",
      "item": [
        {
          "name": "Get Recent Activities (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/activities",
              "host": ["{{base_url}}"],
              "path": ["activities"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}